{"version":3,"sources":["components/QRReader.js","helpers/rpc.js","utilities/xdc3.js","utilities/web3.js","helpers/text.js","abi/stablecoin.js","abi/erc20.js","utilities/tokenInteraction.js","utilities/address.js","utilities/symbols.js","components/RawTxDecoder.js","components/Converter.js","HOC/Dashboard.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["QRReader","state","result","showModal","handleScan","data","setState","handleError","err","console","error","renderCamAction","_","isEmpty","Button","onClick","variant","props","onSubmit","Modal","show","this","onHide","Header","closeButton","Body","className","delay","onError","onScan","style","width","Footer","Component","RPC","1","42","50","51","ExplorerTx","XinFinUnitMap","Object","keys","utils","unitMap","reduce","acc","cur","xinfinSymbol","includes","replace","PublishRawTx","tx","chainId","rpc","Xdc3","providers","HttpProvider","eth","sendSignedTransaction","FromWei","n","to","fromWei","GetAccountNonce","address","config","type","xdc3","getTransactionCount","ToEthAddress","GetAccountBalance","getBalance","IsAddress","isAddress","startsWith","slice","ToXdcAddress","EthUnitMap","Web3","web3","Text","RawTx","inputPlaceholder","enterTx","reset","inavlidData","fromAddress","toAddress","value","nonce","gasPrice","gasLimit","currentNonce","enterInput","ABI","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","AbiDecoder","addABI","StablecoinAbi","Erc20Abi","BlockchainType","GetBlockchainType","GetBlockchainFromChainId","GetNonce","a","GetAccountNonceWeb3","GetAccountNonceXdc3","GetBalance","GetAccountBalanceWeb3","GetAccountBalanceXdc3","IsValid","IsAddressEth","IsAddressXdc","GetEquivalentSymbol","symbol","unit","UnitMapWeb3","processingStates","btnMsg","RenderDecodedData","decodedInput","isValid","showForm","errorMessage","errorClass","Row","Col","abi","exisintgAbi","getABIs","decoded","decodeMethod","colSpan","params","map","e","i","DecodeData","lg","sm","disabled","from","currentBalance","currentBalanceEth","RawTxDecoder","cb","useState","rawTx","setRawTx","processing","status","txHash","form","setForm","useEffect","ethers","parseTransaction","toString","BlockchainTypeObj","then","resp","validNonce","bal","validBalance","parseFloat","catch","Card","Container","onChange","target","placeholder","PublishRawTxXdc","PublishRawTxWeb3","once","hash","link","receipt","transactionHash","bind","message","md","href","rel","substr","utilities","eventKey","label","pendingNonce","setAddress","updtState","GetNonceFunc","renderFunctionBody","utility","setUtility","Dropdown","onSelect","eObj","innerText","DropdownButton","title","Item","active","Converter","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","App","exact","path","Dashboard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f934c952.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport QrReader from 'react-qr-reader';\r\nimport _ from \"lodash\";\r\n\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nclass QRReader extends Component {\r\n  state = {\r\n    result: \"\",\r\n    showModal: false\r\n  };\r\n\r\n  handleScan = data => {\r\n    if (data) {\r\n      this.setState({\r\n        result: data\r\n      });\r\n    }\r\n  };\r\n  handleError = err => {\r\n    console.error(\"******* error\", err);\r\n  };\r\n\r\n  renderCamAction = () => {\r\n\r\n    if (_.isEmpty(this.state.result)) {\r\n      return <></>;\r\n    }\r\n    return <><Button onClick={() => this.setState({ result: \"\" })} variant=\"secondary\">Retake</Button><Button onClick={() => { this.setState({ showModal: false }); this.props.onSubmit(this.state.result); }} variant=\"primary\">Ok</Button></>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={() => this.setState({ showModal: true })} variant=\"primary\">QR Code Scan</Button>\r\n        <Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })} >\r\n          <Modal.Header closeButton>\r\n            TX Hash Scanner\r\n          </Modal.Header>\r\n          <Modal.Body className=\"qr-code-modal\">\r\n            {_.isEmpty(this.state.result) ? <QrReader\r\n              delay={300}\r\n              onError={this.handleError}\r\n              onScan={this.handleScan}\r\n              style={{ width: '70%' }}\r\n            /> : <p>{this.state.result}</p>}\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {this.renderCamAction()}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QRReader;\r\n","export const XinFin = \"https://xinpayrpc.xinfin.network\";\r\n\r\nexport const RPC = {\r\n  1: \"https://mainnet.infura.io/v3/2e03e57ca65842d283c250e2bcda976e\",\r\n  42: \"https://kovan.infura.io/v3/2e03e57ca65842d283c250e2bcda976e\",\r\n  50: \"https://XinPayrpc.xinfin.network\",\r\n  51: \"https://XinPayrpc.apothem.network\",\r\n};\r\n\r\nexport const BlockchainType = {\r\n  1: \"ethereum\",\r\n  4: \"ethereum\",\r\n  42: \"ethereum\",\r\n  50: \"xinfin\",\r\n  51: \"xinfin\",\r\n};\r\n\r\nexport const ExplorerTx = {\r\n  1: \"https://etherscan.io/tx/\",\r\n  42: \"https://kovan.etherscan.io/tx/\",\r\n  50: \"https://explorer.xinfin.network/tx/\",\r\n  51: \"https://explorer.apothem.network/tx/\",\r\n};\r\n","import Xdc3, { utils } from \"xdc3\";\r\n\r\nimport { RPC, XinFin } from \"../helpers/rpc\";\r\n\r\nconst XinFinUnitMap = Object.keys(utils.unitMap).reduce((acc, cur) => {\r\n  let xinfinSymbol = cur;\r\n  if (xinfinSymbol.includes(\"ether\"))\r\n    xinfinSymbol = xinfinSymbol.replace(\"ether\", \"xdc\");\r\n  acc[cur] = xinfinSymbol;\r\n  return acc;\r\n}, {});\r\n\r\nexport const PublishRawTx = (tx, chainId) => {\r\n  const rpc = RPC[`${chainId}`];\r\n  const xdc3 = new Xdc3(new Xdc3.providers.HttpProvider(rpc));\r\n  return xdc3.eth.sendSignedTransaction(tx);\r\n};\r\n\r\nexport const FromWei = (n, to = \"ether\") => {\r\n  return utils.fromWei(n, to);\r\n};\r\n\r\nexport const GetAccountNonce = (\r\n  address,\r\n  config = { chainId: 50, type: \"latest\" }\r\n) => {\r\n  const chainId = config.chainId || 50;\r\n  const type = config.type || \"latest\";\r\n  const rpc = RPC[`${chainId}`];\r\n  const xdc3 = new Xdc3(new Xdc3.providers.HttpProvider(rpc));\r\n  return xdc3.eth.getTransactionCount(ToEthAddress(address), type);\r\n};\r\n\r\nexport const GetAccountBalance = (\r\n  address,\r\n  config = { chainId: 50, type: \"latest\" }\r\n) => {\r\n  const chainId = config.chainId || 50;\r\n  const rpc = RPC[`${chainId}`];\r\n  const xdc3 = new Xdc3(new Xdc3.providers.HttpProvider(rpc));\r\n  return xdc3.eth.getBalance(ToEthAddress(address));\r\n};\r\n\r\nexport const IsAddress = (address = \"\") => {\r\n  return utils.isAddress(address);\r\n};\r\n\r\nexport const ToEthAddress = (address = \"\") => {\r\n  if (address.startsWith(\"xdc\")) address = \"0x\" + address.slice(3);\r\n  return address;\r\n};\r\n\r\nexport const ToXdcAddress = (address = \"\") => {\r\n  if (address.startsWith(\"0x\")) address = \"xdc\" + address.slice(2);\r\n  return address;\r\n};\r\n\r\nexport const UnitMap = (unit) => {\r\n  return XinFinUnitMap[unit];\r\n};\r\n\r\nexport const ExplorerTx = \"https://explorer.xinfin.network/tx/\";\r\n","import Web3, { utils } from \"web3\";\r\n\r\nimport { RPC } from \"../helpers/rpc\";\r\n\r\nconst EthUnitMap = Object.keys(utils.unitMap).reduce((acc, cur) => {\r\n  acc[cur] = cur;\r\n  return acc;\r\n}, {});\r\n\r\nexport const PublishRawTx = (tx, chainId) => {\r\n  const rpc = RPC[`${chainId}`];\r\n  const web3 = new Web3(new Web3.providers.HttpProvider(rpc));\r\n  return web3.eth.sendSignedTransaction(tx);\r\n};\r\n\r\nexport const FromWei = (n, to = \"ether\") => {\r\n  return utils.fromWei(n, to);\r\n};\r\n\r\nexport const GetAccountNonce = (\r\n  address,\r\n  config = { chainId: 1, type: \"latest\" }\r\n) => {\r\n  const chainId = config.chainId || 1;\r\n  const type = config.type || \"latest\";\r\n  const rpc = RPC[`${chainId}`];\r\n  const web3 = new Web3(new Web3.providers.HttpProvider(rpc));\r\n  return web3.eth.getTransactionCount(address, type);\r\n};\r\n\r\nexport const GetAccountBalance = (address) => {\r\n  const chainId = 1;\r\n  const rpc = RPC[`${chainId}`];\r\n  const web3 = new Web3(new Web3.providers.HttpProvider(rpc));\r\n  return web3.eth.getBalance(address);\r\n};\r\n\r\nexport const IsAddress = (address = \"\") => {\r\n  return utils.isAddress(address);\r\n};\r\n\r\nexport const UnitMap = (unit) => {\r\n  return EthUnitMap[unit];\r\n};\r\n","const Text = {\r\n  RawTx: {\r\n    inputPlaceholder: \"Enter Raw Tx\",\r\n    enterTx: \"Enter TX\",\r\n    reset: \"Reset\",\r\n    inavlidData: \"Invalid Data\",\r\n    chainId: \"Chain ID\",\r\n    fromAddress: \"From Address\",\r\n    toAddress: \"To Address\",\r\n    value: \"Value\",\r\n    nonce: \"Nonce\",\r\n    gasPrice: \"Gas Price\",\r\n    gasLimit: \"Gas Limit\",\r\n    data: \"Data\",\r\n    currentNonce: \"Current Nonce\",\r\n    enterInput: \"Enter Input\",\r\n  },\r\n};\r\n\r\nexport default Text;\r\n","const ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ name: \"\", type: \"string\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { name: \"_spender\", type: \"address\" },\r\n      { name: \"_value\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [{ name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ name: \"\", type: \"uint256\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ name: \"_account\", type: \"address\" }],\r\n    name: \"unBlacklist\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { name: \"_from\", type: \"address\" },\r\n      { name: \"_to\", type: \"address\" },\r\n      { name: \"_value\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [{ name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ name: \"minter\", type: \"address\" }],\r\n    name: \"removeMinter\",\r\n    outputs: [{ name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"decimals\",\r\n    outputs: [{ name: \"\", type: \"uint8\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"masterMinter\",\r\n    outputs: [{ name: \"\", type: \"address\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: \"unpause\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { name: \"_to\", type: \"address\" },\r\n      { name: \"_amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"mint\",\r\n    outputs: [{ name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ name: \"_amount\", type: \"uint256\" }],\r\n    name: \"burn\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { name: \"minter\", type: \"address\" },\r\n      { name: \"minterAllowedAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"configureMinter\",\r\n    outputs: [{ name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ name: \"_newPauser\", type: \"address\" }],\r\n    name: \"updatePauser\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ name: \"account\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ name: \"\", type: \"uint256\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: \"pause\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ name: \"minter\", type: \"address\" }],\r\n    name: \"minterAllowance\",\r\n    outputs: [{ name: \"\", type: \"uint256\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ name: \"\", type: \"address\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ name: \"\", type: \"string\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"pauser\",\r\n    outputs: [{ name: \"\", type: \"address\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { name: \"_to\", type: \"address\" },\r\n      { name: \"_value\", type: \"uint256\" },\r\n    ],\r\n    name: \"transfer\",\r\n    outputs: [{ name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ name: \"_newMasterMinter\", type: \"address\" }],\r\n    name: \"updateMasterMinter\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ name: \"account\", type: \"address\" }],\r\n    name: \"isMinter\",\r\n    outputs: [{ name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ name: \"_newBlacklister\", type: \"address\" }],\r\n    name: \"updateBlacklister\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"blacklister\",\r\n    outputs: [{ name: \"\", type: \"address\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { name: \"owner\", type: \"address\" },\r\n      { name: \"spender\", type: \"address\" },\r\n    ],\r\n    name: \"allowance\",\r\n    outputs: [{ name: \"\", type: \"uint256\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"currency\",\r\n    outputs: [{ name: \"\", type: \"string\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ name: \"_account\", type: \"address\" }],\r\n    name: \"blacklist\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ name: \"_account\", type: \"address\" }],\r\n    name: \"isBlacklisted\",\r\n    outputs: [{ name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { name: \"_name\", type: \"string\" },\r\n      { name: \"_symbol\", type: \"string\" },\r\n      { name: \"_currency\", type: \"string\" },\r\n      { name: \"_decimals\", type: \"uint8\" },\r\n      { name: \"_masterMinter\", type: \"address\" },\r\n      { name: \"_pauser\", type: \"address\" },\r\n      { name: \"_blacklister\", type: \"address\" },\r\n      { name: \"_owner\", type: \"address\" },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, name: \"minter\", type: \"address\" },\r\n      { indexed: true, name: \"to\", type: \"address\" },\r\n      { indexed: false, name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"Mint\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, name: \"burner\", type: \"address\" },\r\n      { indexed: false, name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"Burn\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, name: \"minter\", type: \"address\" },\r\n      { indexed: false, name: \"minterAllowedAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"MinterConfigured\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [{ indexed: true, name: \"oldMinter\", type: \"address\" }],\r\n    name: \"MinterRemoved\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [{ indexed: true, name: \"newMasterMinter\", type: \"address\" }],\r\n    name: \"MasterMinterChanged\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [{ indexed: true, name: \"_account\", type: \"address\" }],\r\n    name: \"Blacklisted\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [{ indexed: true, name: \"_account\", type: \"address\" }],\r\n    name: \"UnBlacklisted\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [{ indexed: true, name: \"newBlacklister\", type: \"address\" }],\r\n    name: \"BlacklisterChanged\",\r\n    type: \"event\",\r\n  },\r\n  { anonymous: false, inputs: [], name: \"Pause\", type: \"event\" },\r\n  { anonymous: false, inputs: [], name: \"Unpause\", type: \"event\" },\r\n  {\r\n    anonymous: false,\r\n    inputs: [{ indexed: true, name: \"newAddress\", type: \"address\" }],\r\n    name: \"PauserChanged\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, name: \"owner\", type: \"address\" },\r\n      { indexed: true, name: \"spender\", type: \"address\" },\r\n      { indexed: false, name: \"value\", type: \"uint256\" },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: false, name: \"previousOwner\", type: \"address\" },\r\n      { indexed: false, name: \"newOwner\", type: \"address\" },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, name: \"from\", type: \"address\" },\r\n      { indexed: true, name: \"to\", type: \"address\" },\r\n      { indexed: false, name: \"value\", type: \"uint256\" },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n];\r\nexport default ABI;\r\n","const ABI = [\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_name\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        name: \"_symbol\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"updateTokenInformation\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"addr\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"state\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"setTransferAgent\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [\r\n      {\r\n        name: \"success\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_tokensForPublicSale\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        name: \"_min\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        name: \"_max\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        name: \"_crowdsaleStatus\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"setPublicSaleParams\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"setTotalTokensForPublicSale\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [\r\n      {\r\n        name: \"success\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"addr\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"setReleaseAgent\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: \"destroyToken\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"decimals\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_min\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        name: \"_max\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"setMinAndMaxEthersForPublicSale\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"upgrade\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"isCrowdsaleOpen\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"upgradeAgent\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: \"releaseTokenTransfer\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"upgradeMaster\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"updateTokenPrice\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"_owner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        name: \"balance\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: \"acceptOwnership\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"getUpgradeState\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint8\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"transferAgents\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_investor\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_tokens\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"sendTokensToInvestors\",\r\n    outputs: [\r\n      {\r\n        name: \"ok\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"released\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"canUpgrade\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"decreaseSupply\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"a\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        name: \"b\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"safeSub\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"transfer\",\r\n    outputs: [\r\n      {\r\n        name: \"success\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"increaseSupply\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: \"stopCrowdSale\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"totalUpgraded\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_addresses\",\r\n        type: \"address[]\",\r\n      },\r\n      {\r\n        name: \"_value\",\r\n        type: \"uint256[]\",\r\n      },\r\n    ],\r\n    name: \"dispenseTokensToInvestorAddressesByValue\",\r\n    outputs: [\r\n      {\r\n        name: \"ok\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"a\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        name: \"b\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"safeMul\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: \"buyTokens\",\r\n    outputs: [\r\n      {\r\n        name: \"tokenAmount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: true,\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"releaseAgent\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"newOwner\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"agent\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"setUpgradeAgent\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_newSupply\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"updateOnSaleSupply\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"_owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_spender\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"allowance\",\r\n    outputs: [\r\n      {\r\n        name: \"remaining\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"onSaleTokens\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"a\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        name: \"b\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"safeAdd\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_tokens\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"sendTokensToOwner\",\r\n    outputs: [\r\n      {\r\n        name: \"ok\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: \"startCrowdSale\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"master\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"setUpgradeMaster\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    payable: true,\r\n    stateMutability: \"payable\",\r\n    type: \"fallback\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        name: \"newName\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"newSymbol\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"UpdatedTokenInformation\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"_from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"_to\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"_from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"_to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Upgrade\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        name: \"agent\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"UpgradeAgentSet\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n];\r\n\r\nexport default ABI;\r\n","import AbiDecoder from \"abi-decoder\";\r\n\r\nimport StablecoinAbi from \"../abi/stablecoin\";\r\nimport Erc20Abi from \"../abi/erc20\";\r\n\r\nAbiDecoder.addABI(StablecoinAbi);\r\nAbiDecoder.addABI(Erc20Abi);\r\n\r\nexport const DecodeData = (data, abi = null) => {\r\n  try {\r\n    const exisintgAbi = AbiDecoder.getABIs();\r\n    if (abi && !exisintgAbi.includes(abi)) AbiDecoder.addABI(abi);\r\n\r\n    const decoded = AbiDecoder.decodeMethod(data);\r\n\r\n    return (\r\n      <div className=\"decoded-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"decoded-table--field\">Function Name</th>\r\n              <th className=\"decoded-table--value\" colSpan={2}>\r\n                {decoded.name}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr key={0}>\r\n              <th>Parameter</th>\r\n              <th>Type</th>\r\n              <th>Value</th>\r\n            </tr>\r\n            {decoded.params.map((e, i) => (\r\n              <tr key={i + 1}>\r\n                <td>{e.name}</td>\r\n                <td>{e.type}</td>\r\n                <td>{e.value}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  } catch (e) {\r\n    return <></>;\r\n  }\r\n};\r\n","import {\r\n  GetAccountNonce as GetAccountNonceXdc3,\r\n  IsAddress as IsAddressXdc,\r\n  ToEthAddress,\r\n  GetAccountBalance as GetAccountBalanceXdc3\r\n} from \"../utilities/xdc3\";\r\nimport {\r\n  GetAccountNonce as GetAccountNonceWeb3,\r\n  IsAddress as IsAddressEth,\r\n  GetAccountBalance as GetAccountBalanceWeb3\r\n} from \"../utilities/web3\";\r\nimport { isAddress } from \"ethers/lib/utils\";\r\n\r\nexport const BlockchainType = {\r\n  ethereum: \"ethereum\",\r\n  xinfin: \"xinfin\",\r\n};\r\n\r\nexport const GetBlockchainType = (address = \"\") => {\r\n  if (address.startsWith(\"xdc\")) return BlockchainType.xinfin;\r\n  if (address.startsWith(\"0x\")) return BlockchainType.ethereum;\r\n  return \"invalid\";\r\n};\r\n\r\nexport const GetBlockchainFromChainId = (chainId) => {\r\n  switch (`${chainId}`) {\r\n    case '50': return BlockchainType.xinfin;\r\n    case '1': return BlockchainType.ethereum;\r\n    default: return null;\r\n  }\r\n};\r\n\r\nexport const GetNonce = async (address, type) => {\r\n  switch (type) {\r\n    case BlockchainType.ethereum: {\r\n      return await GetAccountNonceWeb3(address);\r\n    }\r\n    case BlockchainType.xinfin: {\r\n      return await GetAccountNonceXdc3(address);\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const GetBalance = async (address, type) => {\r\n  switch (type) {\r\n    case BlockchainType.ethereum: {\r\n      return await GetAccountBalanceWeb3(address);\r\n    }\r\n    case BlockchainType.xinfin: {\r\n      return await GetAccountBalanceXdc3(address);\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const IsValid = (address = \"\") => {\r\n  return IsAddressEth(address) || IsAddressXdc(ToEthAddress(address));\r\n};\r\n","import { BlockchainType } from \"./address\";\r\nimport { UnitMap as UnitMapXdc3 } from \"./xdc3\";\r\nimport { UnitMap as UnitMapWeb3 } from \"./web3\";\r\n\r\nexport const GetEquivalentSymbol = (symbol, type) => {\r\n  if (type === BlockchainType.xinfin) {\r\n    return UnitMapXdc3(symbol);\r\n  } else {\r\n    return UnitMapWeb3(symbol);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Col, Container, Row, Card } from \"react-bootstrap\";\r\nimport { ethers } from \"ethers\";\r\nimport _ from \"lodash\";\r\n\r\nimport QRReader from \"./QRReader\";\r\nimport {\r\n  FromWei,\r\n  PublishRawTx as PublishRawTxXdc,\r\n  ToXdcAddress,\r\n} from \"../utilities/xdc3\";\r\n\r\nimport { PublishRawTx as PublishRawTxWeb3 } from \"../utilities/web3\";\r\n\r\nimport Text from \"../helpers/text\";\r\nimport { DecodeData } from \"../utilities/tokenInteraction\";\r\nimport { ExplorerTx } from \"../helpers/rpc\";\r\nimport {\r\n  GetBlockchainFromChainId,\r\n  GetNonce,\r\n  GetBalance,\r\n  BlockchainType as BlockchainTypeObj,\r\n} from \"../utilities/address\";\r\nimport { GetEquivalentSymbol } from \"../utilities/symbols\";\r\n\r\nconst processingStates = {\r\n  initial: \"Intial\",\r\n  pending: \"Pending\",\r\n  completed: \"Completed\",\r\n  failed: \"Failed\",\r\n};\r\n\r\nconst btnMsg = {\r\n  ready: \"Publish\",\r\n  pending: \"Submitting\",\r\n  completed: \"Completed\",\r\n};\r\n\r\nfunction RenderDecodedData({\r\n  data,\r\n  isValid,\r\n  showForm,\r\n  errorMessage = Text.RawTx.enterInput,\r\n  errorClass = \"info-msg\",\r\n}) {\r\n  if (showForm === false) {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col className={`u-text-center ${errorClass}`}>{errorMessage}</Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n\r\n  let decodedInput;\r\n  if (data.data) {\r\n    decodedInput = DecodeData(data.data);\r\n\r\n    decodedInput = (\r\n      <Row>\r\n        <Col lg={3} sm={3}></Col>\r\n        <Col lg={9} sm={9}>\r\n          {decodedInput}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isValid === false ? (\r\n        <>\r\n          <Row>\r\n            <Col className={`u-text-center ${errorClass}`}>{errorMessage}</Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Row>\r\n        <Col lg={3} sm={3}>\r\n          <label className=\"form-comtrol\">Chain ID</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <input disabled className=\"form-comtrol\" value={data.chainId} />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col lg={3} sm={3}>\r\n          <label className=\"form-comtrol\">From Address</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <input disabled className=\"form-comtrol\" value={data.from} />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col lg={3} sm={3}>\r\n          <label className=\"form-comtrol\">To Address</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <input disabled className=\"form-comtrol\" value={data.to} />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col lg={3} sm={3}>\r\n          <label className=\"form-comtrol\">Value</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <div className=\"appended-input\">\r\n            <input disabled className=\"form-comtrol\" value={data.value} />\r\n            <div className=\"appendage\">\r\n              {GetEquivalentSymbol(\r\n                \"wei\",\r\n                GetBlockchainFromChainId(data.chainId)\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col lg={3} sm={3}></Col>\r\n        <Col lg={9} sm={9}>\r\n          <div className=\"appended-input\">\r\n            <input disabled className=\"form-comtrol\" value={data.eth} />\r\n            <div className=\"appendage\">\r\n              {GetEquivalentSymbol(\r\n                \"ether\",\r\n                GetBlockchainFromChainId(data.chainId)\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col lg={3} sm={3}>\r\n          <label className=\"form-comtrol\">Nonce</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <input disabled className=\"form-comtrol\" value={data.nonce} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={3} sm={3}>\r\n          <label className=\"form-comtrol\">Current Nonce</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <input disabled className=\"form-comtrol\" value={data.currentNonce} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={3} sm={3}>\r\n          <label className=\"form-comtrol\">Balance</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <div className=\"appended-input\">\r\n            <input\r\n              disabled\r\n              className=\"form-comtrol\"\r\n              value={data.currentBalance}\r\n            />\r\n            <div className=\"appendage\">\r\n              {GetEquivalentSymbol(\r\n                \"wei\",\r\n                GetBlockchainFromChainId(data.chainId)\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col lg={3} sm={3}></Col>\r\n        <Col lg={9} sm={9}>\r\n          <div className=\"appended-input\">\r\n            <input\r\n              disabled\r\n              className=\"form-comtrol\"\r\n              value={data.currentBalanceEth}\r\n            />\r\n            <div className=\"appendage\">\r\n              {GetEquivalentSymbol(\r\n                \"ether\",\r\n                GetBlockchainFromChainId(data.chainId)\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={3} sm={3}>\r\n          <label className=\"form-comtrol\">{Text.RawTx.gasPrice}</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <input disabled className=\"form-comtrol\" value={data.gasPrice} />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col lg={3} sm={3}>\r\n          <label className=\"form-comtrol\">{Text.RawTx.gasLimit}</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <input disabled className=\"form-comtrol\" value={data.gasLimit} />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col lg={3} sm={3}>\r\n          <label className=\"form-comtrol\">{Text.RawTx.data}</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <div className=\"raw-tx-decoder--field\">{data.data}</div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {decodedInput}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction renderStatusNote(data) {\r\n  if (data.processing !== true) {\r\n    return <></>;\r\n  }\r\n\r\n  if (\r\n    data.status === processingStates.pending ||\r\n    data.status === processingStates.completed\r\n  )\r\n    return (\r\n      <div className=\"highlighted-note\">\r\n        <div className=\"highlighted-note--title\">Status</div>\r\n        <div className=\"highlighted-note--body\">\r\n          <Container>\r\n            <Row>\r\n              <Col lg={4} md={4} sm={4} className=\"highlighted-note--body_key\">\r\n                Status\r\n              </Col>\r\n\r\n              <Col\r\n                lg={8}\r\n                md={8}\r\n                sm={8}\r\n                className=\"highlighted-note--body_field\"\r\n              >\r\n                {data.status}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col lg={4} md={4} sm={4} className=\"highlighted-note--body_key\">\r\n                TX Hash\r\n              </Col>\r\n\r\n              <Col\r\n                lg={8}\r\n                md={8}\r\n                sm={8}\r\n                className=\"highlighted-note--body_field\"\r\n              >\r\n                {data.txHash}\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col lg={4} md={4} sm={4} className=\"highlighted-note--body_key\">\r\n                Link\r\n              </Col>\r\n\r\n              <Col\r\n                lg={8}\r\n                md={8}\r\n                sm={8}\r\n                className=\"highlighted-note--body_field\"\r\n              >\r\n                <a href={data.link} rel=\"noreferrer\" target=\"_blank\">\r\n                  {data.txHash.substr(0, 10)}...\r\n                </a>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (data.status === processingStates.failed)\r\n    return (\r\n      <div className=\"highlighted-note\">\r\n        <div className=\"highlighted-note--title\">Status</div>\r\n        <div className=\"highlighted-note--body\">\r\n          <Container>\r\n            <Row>\r\n              <Col lg={4} md={4} sm={4} className=\"highlighted-note--body_key\">\r\n                Status\r\n              </Col>\r\n\r\n              <Col\r\n                lg={8}\r\n                md={8}\r\n                sm={8}\r\n                className=\"highlighted-note--body_field\"\r\n              >\r\n                {data.status}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col lg={4} md={4} sm={4} className=\"highlighted-note--body_key\">\r\n                Error\r\n              </Col>\r\n\r\n              <Col\r\n                lg={8}\r\n                md={8}\r\n                sm={8}\r\n                className=\"highlighted-note--body_field\"\r\n              >\r\n                {data.errorMessage}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col lg={4} md={4} sm={4} className=\"highlighted-note--body_key\">\r\n                TX Hash\r\n              </Col>\r\n\r\n              <Col\r\n                lg={8}\r\n                md={8}\r\n                sm={8}\r\n                className=\"highlighted-note--body_field\"\r\n              >\r\n                {data.txHash}\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nfunction renderRedoBtn(data, cb) {\r\n  if (\r\n    true\r\n    // (data.processing === true) &\r\n    // [data.completed, data.failed].includes(data.status)\r\n  ) {\r\n    return (\r\n      <button className=\"u-float-r btn btn-secondary\" onClick={() => cb()}>\r\n        {Text.RawTx.reset}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return <></>;\r\n}\r\n\r\nexport default function RawTxDecoder() {\r\n  const [rawTx, setRawTx] = useState(\"\");\r\n  const [form, setForm] = useState({\r\n    data: {},\r\n    isValid: false,\r\n    btnMsg: btnMsg.ready,\r\n    processing: false,\r\n    errorMessage: Text.RawTx.enterInput,\r\n    status: \"\",\r\n    txHash: \"\",\r\n    showForm: false,\r\n    currentBalance: \"loading\",\r\n    errorClass: \"info-msg\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let isValid = false,\r\n      showForm = false,\r\n      errorMessage = Text.RawTx.enterInput,\r\n      errorClass = \"info-msg\",\r\n      data = {};\r\n\r\n    if (!_.isEmpty(rawTx))\r\n      try {\r\n        data = ethers.utils.parseTransaction(rawTx);\r\n        data.gasPrice = data.gasPrice.toString();\r\n        data.gasLimit = data.gasLimit.toString();\r\n        data.value = data.value.toString();\r\n        data.eth = FromWei(data.value);\r\n        data.currentNonce = \"loading\";\r\n        isValid = true;\r\n        if (data.gasPrice == 0 || data.gasLimit == 0) {\r\n          isValid = false;\r\n          errorMessage = \"invalid gas price / limit\";\r\n          errorClass = \"error-msg\";\r\n        }\r\n        showForm = true;\r\n        let type = GetBlockchainFromChainId(data.chainId);\r\n        if (type === BlockchainTypeObj.xinfin) {\r\n          data.from = ToXdcAddress(data.from);\r\n          data.to = ToXdcAddress(data.to);\r\n        }\r\n        GetNonce(data.from, type)\r\n          .then((resp) => {\r\n            const validNonce = data.nonce === resp;\r\n            errorMessage = \"invalid nonce\";\r\n            errorClass = \"error-msg\";\r\n            setForm({\r\n              ...form,\r\n              data: { ...data, currentNonce: resp },\r\n              isValid: isValid && validNonce,\r\n              showForm: true,\r\n              errorMessage,\r\n            });\r\n\r\n            GetBalance(data.from, type)\r\n              .then((bal) => {\r\n                const validBalance = parseFloat(data.value) <= parseFloat(bal);\r\n                errorMessage = \"invalid balance\";\r\n                errorClass = \"error-msg\";\r\n                setForm({\r\n                  ...form,\r\n                  data: {\r\n                    ...data,\r\n                    currentNonce: resp,\r\n                    currentBalance: bal,\r\n                    currentBalanceEth: FromWei(bal),\r\n                  },\r\n                  isValid: isValid && validNonce && validBalance,\r\n                  showForm: true,\r\n                  errorMessage,\r\n                  errorClass,\r\n                });\r\n              })\r\n              .catch((e) => {\r\n                errorMessage = \"error while getting balance\";\r\n                errorClass = \"error-msg\";\r\n\r\n                setForm({\r\n                  ...form,\r\n                  currentBalance: \"error\",\r\n                  errorClass,\r\n                  isValid: false,\r\n                  errorMessage,\r\n                });\r\n              });\r\n          })\r\n          .catch((e) => {\r\n            errorMessage = \"error while getting nonce\";\r\n            errorClass = \"error-msg\";\r\n\r\n            setForm({\r\n              ...form,\r\n              currentNonce: \"error\",\r\n              isValid: false,\r\n              errorMessage,\r\n              errorClass,\r\n            });\r\n          });\r\n      } catch (e) {\r\n        console.error(e);\r\n        data = {};\r\n        isValid = false;\r\n        showForm = false;\r\n        errorMessage = Text.RawTx.inavlidData;\r\n        errorClass = \"error-msg\";\r\n      }\r\n\r\n    setForm({ ...form, data, isValid, showForm, errorMessage, errorClass });\r\n  }, [rawTx]);\r\n\r\n  return (\r\n    <div className=\"raw-tx-decoder\">\r\n      <Card className=\"custom-card-1\">\r\n        <Card.Body>\r\n          <Container>\r\n            <div className=\"title\">\r\n              Raw Tx Decoder<div className=\"title--bottom\"></div>\r\n            </div>\r\n\r\n            <div className=\"card-body custom-input-1\">\r\n              <Row>\r\n                <Col lg={3} sm={3}>\r\n                  <label className=\"form-comtrol\">Enter Raw TX</label>\r\n                </Col>\r\n                <Col lg={9} sm={9}>\r\n                  <textarea\r\n                    disabled={form.processing}\r\n                    className=\"form-comtrol\"\r\n                    onChange={(e) => setRawTx(e.target.value)}\r\n                    placeholder={Text.RawTx.inputPlaceholder}\r\n                    value={rawTx}\r\n                  />\r\n                  <QRReader onSubmit={(e) => setRawTx(e)} />\r\n                </Col>\r\n              </Row>\r\n\r\n              <hr />\r\n\r\n              {RenderDecodedData(form)}\r\n\r\n              <hr />\r\n\r\n              <Row>\r\n                <Col>\r\n                  <button\r\n                    className=\"u-float-r btn btn-primary\"\r\n                    disabled={\r\n                      form.isValid === false || form.btnMsg !== btnMsg.ready\r\n                    }\r\n                    onClick={() => {\r\n                      setForm({\r\n                        ...form,\r\n                        processing: true,\r\n                        btnMsg: btnMsg.pending,\r\n                        state: processingStates.initial,\r\n                      });\r\n                      const type =\r\n                        GetBlockchainFromChainId[`${form.data.chainId}`];\r\n                      const RawTxFunc =\r\n                        type === \"xinfin\" ? PublishRawTxXdc : PublishRawTxWeb3;\r\n                      RawTxFunc(rawTx, form.data.chainId)\r\n                        .once(\"transactionHash\", function (hash) {\r\n                          setForm({\r\n                            ...form,\r\n                            processing: true,\r\n                            txHash: hash,\r\n                            status: processingStates.pending,\r\n                            link: `${\r\n                              ExplorerTx[`${form.data.chainId}`]\r\n                            }${hash}`,\r\n                          });\r\n                        })\r\n                        .once(\r\n                          \"receipt\",\r\n                          function (receipt) {\r\n                            if (receipt.status === true) {\r\n                              // tx succcess\r\n                              setForm({\r\n                                ...form,\r\n                                processing: true,\r\n                                status: processingStates.completed,\r\n                                btnMsg: btnMsg.completed,\r\n                                txHash: receipt.transactionHash,\r\n                                link: `${ExplorerTx[`${form.data.chainId}`]}${\r\n                                  receipt.transactionHash\r\n                                }`,\r\n                              }).bind(this);\r\n                            } else {\r\n                              //tx failed\r\n                              setForm({\r\n                                ...form,\r\n                                processing: true,\r\n                                status: processingStates.failed,\r\n                                btnMsg: btnMsg.completed,\r\n                              }).bind(this);\r\n                            }\r\n                          }.bind(this)\r\n                        )\r\n                        .once(\"error\", (err) => {\r\n                          setForm({\r\n                            ...form,\r\n                            processing: true,\r\n                            status: processingStates.failed,\r\n                            errorMessage: err.message,\r\n                            btnMsg: btnMsg.completed,\r\n                          });\r\n                        });\r\n                    }}\r\n                  >\r\n                    {form.btnMsg}\r\n                  </button>\r\n                  {renderRedoBtn({ ...form }, () => {\r\n                    setForm({\r\n                      data: {},\r\n                      isValid: false,\r\n                      btnMsg: btnMsg.ready,\r\n                      processing: false,\r\n                      errorMessage: \"Enter Input\",\r\n                      status: \"\",\r\n                      txHash: \"\",\r\n                      showForm: false,\r\n                    });\r\n                    setRawTx(\"\");\r\n                  })}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>{renderStatusNote({ ...form })}</Col>\r\n              </Row>\r\n            </div>\r\n          </Container>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\n\r\nimport {\r\n  GetBlockchainType,\r\n  GetNonce as GetNonceFunc,\r\n  IsValid,\r\n} from \"../utilities/address\";\r\n\r\nconst utilities = [{ eventKey: 1, label: \"Nonce\" }];\r\n\r\nconst GetNonce = function () {\r\n  const [address, setAddress] = useState({\r\n    value: \"\",\r\n    type: null,\r\n    nonce: \"-\",\r\n    pendingNonce: \"-\",\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"custom-input-1\">\r\n        <Col lg={3} sm={3}>\r\n          <label>Address</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <input\r\n            className=\"form-comtrol\"\r\n            value={address.value}\r\n            onChange={async (e) => {\r\n              let type = GetBlockchainType(e.target.value);\r\n              const isValid = IsValid(e.target.value);\r\n              if (isValid === false) {\r\n                type = \"invalid\";\r\n              }\r\n              const updtState = {\r\n                ...address,\r\n                value: e.target.value,\r\n                type: type,\r\n                nonce: \"-\",\r\n                pendingNonce: \"-\",\r\n              };\r\n              if (type !== \"invalid\") {\r\n                updtState.nonce = await GetNonceFunc(updtState.value, type);\r\n              }\r\n              setAddress({ ...updtState });\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"custom-input-1\">\r\n        <Col lg={3} sm={3}>\r\n          <label>Type</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <input\r\n            className=\"form-comtrol\"\r\n            value={address.type}\r\n            disabled={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"custom-input-1\">\r\n        <Col lg={3} sm={3}>\r\n          <label>Nonce</label>\r\n        </Col>\r\n        <Col lg={9} sm={9}>\r\n          <input\r\n            className=\"form-comtrol\"\r\n            value={address.nonce}\r\n            disabled={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nfunction renderFunctionBody({ eventKey }, address, cb) {\r\n  if (eventKey <= 0) {\r\n    return <div>Select A Function to Continue</div>;\r\n  }\r\n  switch (eventKey) {\r\n    case `1`: {\r\n      return <GetNonce />;\r\n    }\r\n    case `2`: {\r\n      return (\r\n        <Row>\r\n          <Col></Col>\r\n          <Col></Col>\r\n        </Row>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default function () {\r\n  const [utility, setUtility] = useState({\r\n    label: \"Select Utility\",\r\n    eventKey: 0,\r\n  });\r\n\r\n  return (\r\n    <div className=\"converter\">\r\n      <Card className=\"custom-card-1\">\r\n        <Card.Body>\r\n          <Container>\r\n            <div className=\"title\">\r\n              Utilities<div className=\"title--bottom\"></div>\r\n            </div>\r\n\r\n            <div className=\"card-body custom-input-1\">\r\n              <Row className=\"converter--function-selector\">\r\n                <Col>\r\n                  <label className=\"form-comtrol\">Select Functionality</label>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Dropdown\r\n                    onSelect={(e, eObj) => {\r\n                      setUtility({ eventKey: e, label: eObj.target.innerText });\r\n                    }}\r\n                  >\r\n                    <DropdownButton title={utility.label}>\r\n                      {utilities.map((e, i) => (\r\n                        <Dropdown.Item\r\n                          eventKey={e.eventKey}\r\n                          active={utility.eventKey == e.eventKey}\r\n                        >\r\n                          {e.label}\r\n                        </Dropdown.Item>\r\n                      ))}\r\n                    </DropdownButton>\r\n                  </Dropdown>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"converter--function-body\">\r\n                {renderFunctionBody(utility)}\r\n              </Row>\r\n            </div>\r\n          </Container>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport RawTxDecoder from \"../components/RawTxDecoder\";\r\nimport Converter from \"../components/Converter\";\r\n\r\nexport default function () {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <RawTxDecoder />\r\n      <Converter />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <Navbar className=\"custom-header\" bg=\"light\" expand=\"lg\">\r\n      <Link className=\"navbar-brand\" to=\"/raw-tx\">\r\n        Simple Wallet\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link className=\"nav-link\" to=\"/raw-tx\">\r\n            Raw Tx\r\n          </Link>\r\n          <Link className=\"nav-link\" to=\"/converter\">\r\n            Converter\r\n          </Link>\r\n          <Link className=\"nav-link\" to=\"/stablecoins\">\r\n            Stablecoin\r\n          </Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Dashboard from \"./HOC/Dashboard\";\r\nimport Test from \"./components/QRReader\";\r\n\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport \"./assets/scss/main.scss\";\r\nimport Header from \"./components/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n      <Switch>\r\n        <Route exact path=\"/raw-tx\">\r\n          <Dashboard />\r\n        </Route>\r\n\r\n        {/* <Route exact path=\"/converter\">\r\n          <></>\r\n        </Route>\r\n\r\n        <Route exact path=\"/stablecoins\">\r\n          <></>\r\n        </Route> */}\r\n\r\n        <Route path=\"/\">\r\n          <Redirect to=\"raw-tx\" />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}